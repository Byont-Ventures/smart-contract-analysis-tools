ARG UBUNTU_VERSION=focal
FROM ubuntu:${UBUNTU_VERSION} as base

ARG UBUNTU_VERSION
ARG LLVM_VERSION=12
ARG K_VERSION=5.4.3
ARG KEVM_VERSION=1.0.1
ARG KEVM_COMMIT=0e96c8d
ARG Z3_VERSION=4.8.15

# Install dependencies
# https://github.com/runtimeverification/evm-semantics/tree/v1.0.1-0e96c8d#ubuntu
RUN export DEBIAN_FRONTEND=noninteractive \
    && apt update \
    && apt upgrade -y \
	&& apt install -y \
		autoconf \
		bison \
		clang-${LLVM_VERSION} \
		cmake \
		curl \
		flex \
		gcc \
		jq \
		libboost-test-dev \
		libcrypto++-dev \
		libffi-dev \
		libgflags-dev \
		libjemalloc-dev \
		libmpfr-dev \
		libprocps-dev \
		libsecp256k1-dev \
		libssl-dev \
		libtool \
		libyaml-dev \
		lld-${LLVM_VERSION} \
		llvm-${LLVM_VERSION}-tools \
		make \
		maven \
		netcat-openbsd \
		openjdk-11-jdk \
		pkg-config \
		protobuf-compiler \
		python3 \
		python-pygments \
		rapidjson-dev \
		time \
		zlib1g-dev

# Non-duplicates from k repo readme
# https://github.com/runtimeverification/k/blob/master/package/debian/Dockerfile
RUN export DEBIAN_FRONTEND=noninteractive \
    && apt update                \
    && apt upgrade -y            \
    && apt install -y            \
        build-essential          \
        debhelper                \
        gcc                      \
        libgdbm-dev              \
        libgmp-dev               \
        libffi-dev               \
        libmpfr-dev              \
        libncurses5-dev          \
        libnss3-dev              \
        libreadline-dev          \
        libsqlite3-dev           \
        libbz2-dev               \
        libz3-dev                \
        parallel                 \
        pkg-config               \
        python3-dev              \
        python3-distutils        \
        python3-pip              

# Needed for add-apt-repository
RUN apt install -y \
        apt-utils \
	    software-properties-common

# Install git
RUN add-apt-repository -y ppa:git-core/ppa \
	&& apt update \
    && apt upgrade -y \
	&& apt install -y git

# Install z3
# Version $Z3_VERSION required by kevm v${KEVM_VERSION}-${KEVM_COMMIT}
# https://github.com/runtimeverification/evm-semantics/releases/tag/v$KEVM_VERSION
RUN git clone https://github.com/Z3Prover/z3.git \
	&& cd z3 \
	&& git checkout z3-${Z3_VERSION} \
	&& python3 scripts/mk_make.py \
	&& cd build \
	&& make -j8 \
	&& make -j8 install \
	&& cd ../.. \
    && rm -rf z3

# Install Haskell
RUN curl -sSL https://get.haskellstack.org/ | sh
ENV PATH=$HOME/.local/bin:$PATH

# Get the evm-semantics repo
RUN git clone https://github.com/runtimeverification/evm-semantics.git /root/evm-semantics \
	&& cd /root/evm-semantics \
	&& git checkout v${KEVM_VERSION}-${KEVM_COMMIT}

WORKDIR /root/evm-semantics

RUN apt update \
    && apt upgrade -y

# Install dependencies with poetry
RUN apt install -y python3-pip
# RUN pip3 install /root/evm-semantics/kevm-pyk \
#     && rm -r /root/evm-semantics
RUN pip3 install virtualenv \
					poetry
RUN cd /root/evm-semantics/kevm-pyk \
	&& make poetry-install
ENV PYTHONPATH=/root/.cache/pypoetry/virtualenvs/kevm-pyk-wYudXE09-py3.8/lib/python3.8/site-packages:$PYTHONPATH
ENV PYTHONPATH=/root/evm-semantics/kevm-pyk/src:$PYTHONPATH

RUN DEBIAN_FRONTEND=noninteractive apt -y clean
RUN DEBIAN_FRONTEND=noninteractive apt -y autoremove --purge

# K Framework
# Comment out the lines described in this issue https://github.com/runtimeverification/k/issues/2910
#   in deps/k/kernel/src/main/java/org/kframework/parser/ParserUtils.java
#   lines 227 and 228
# For arm64 some extra things needed to be set for building the k-framework. See:
#   https://stackoverflow.com/questions/63746826/what-might-cause-commitandreleasebuffer-invalid-argument-invalid-character
RUN git submodule update --init --recursive
RUN sed -i '227s/^/\/\/ /' deps/k/kernel/src/main/java/org/kframework/parser/ParserUtils.java \
    && sed -i '228s/^/\/\/ /' deps/k/kernel/src/main/java/org/kframework/parser/ParserUtils.java

RUN mkdir -p .build/usr/bin \
    && mkdir -p .build/usr/lib/kevm
ENV PATH=/root/evm-semantics/.build/usr/bin:$PATH
ENV PATH=/root/evm-semantics/.build/usr/lib/kevm/kframework/bin:$PATH

# https://github.com/runtimeverification/evm-semantics/issues/1022
RUN if [ "$(uname -m)" = "aarch64" ]; then                              \
        DEBIAN_FRONTEND=noninteractive apt install -y libnuma-dev   \
        && LANG=C.UTF-8 make deps RELEASE=true APPLE_SILICON=true;      \
    else                                                                \
        make deps RELEASE=true;                                         \
    fi

# https://github.com/runtimeverification/evm-semantics#macos
RUN if [ "$(uname -m)" = "aarch64" ]; then  \
        LANG=C.UTF-8 make libsecp256k1;     \
    fi


# Blockchain Plugin
RUN if [ "$(uname -m)" = "aarch64" ]; then                              \
        LANG=C.UTF-8 make plugin-deps RELEASE=true APPLE_SILICON=true;  \
    else                                                                \
        make plugin-deps RELEASE=true;                                  \
    fi


# Building
RUN if [ "$(uname -m)" = "aarch64" ]; then                          \
        LANG=C.UTF-8 make build RELEASE=true APPLE_SILICON=true;    \
    else                                                            \
        make build RELEASE=true;                                    \
    fi

ENV PATH=/root/evm-semantics/deps/k/k-distribution/bin:$PATH

WORKDIR /

# Install solc
RUN pip3 install solc-select
RUN solc-select install 0.8.17 \
    && solc-select use 0.8.17

RUN apt autoremove --purge \
    && apt autoclean \
    && apt clean
